=begin
Apcera APIs

REST APIs used to manage an Apcera cluster and its resources. 

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MetricsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MetricsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MetricsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MetricsApi' do
    it 'should create an instact of MetricsApi' do
      @instance.should be_a(SwaggerClient::MetricsApi)
    end
  end

  # unit tests for metrics_cluster_get
  # Returns metrics data for the cluster.
  # Returns metrics data for the cluster.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :metric Comma-delimited string that includes, in order, the following fields: \n * Job FQN (wildcards accepted) \n * Instance manager hostname (can be a wildcard)\n * Instance ID \n * Metric to evaluate \n * &#39;From&#39; time (optional)\n * &#39;To&#39; time (optional).
  # @option opts [String] :authorization 
  # @return [Metrics]
  describe 'metrics_cluster_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for metrics_instance_managers_get
  # Returns metrics for instance managers.
  # Returns metrics for instance managers.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :metric 
  # @option opts [String] :authorization 
  # @return [Metrics]
  describe 'metrics_instance_managers_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for metrics_jobs_get
  # Returns job metrics.
  # Returns job metrics.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :metric Comma-delimited string that includes, in order, the following fields: \n * Job FQN (wildcards accepted) \n * Instance manager hostname (can be a wildcard)\n * Instance ID \n * Metric to evaluate \n * &#39;From&#39; time (optional)\n * &#39;To&#39; time (optional).
  # @option opts [String] :authorization 
  # @return [Metrics]
  describe 'metrics_jobs_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for metrics_route_counters_get
  # Returns metrics for counters on the route.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :metric 
  # @option opts [String] :authorization 
  # @return [Metrics]
  describe 'metrics_route_counters_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for metrics_route_timers_get
  # Returns metrics for timers on the route.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :metric 
  # @option opts [String] :authorization 
  # @return [Metrics]
  describe 'metrics_route_timers_get test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
